<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.mingempty.concurrent.record.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="top.mingempty.concurrent.record.model.TaskPo">
    <id column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="pool_name" jdbcType="VARCHAR" property="poolName" />
    <result column="task_class" jdbcType="VARCHAR" property="taskClass" />
    <result column="task_status" jdbcType="CHAR" property="taskStatus" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="completion_time" jdbcType="TIMESTAMP" property="completionTime" />
    <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
    <result column="span_id" jdbcType="VARCHAR" property="spanId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_operator" jdbcType="VARCHAR" property="createOperator" />
    <result column="update_operator" jdbcType="VARCHAR" property="updateOperator" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="top.mingempty.concurrent.record.model.TaskPo">
    <result column="thread_data" jdbcType="LONGVARCHAR" property="threadData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_id, pool_name, task_class, task_status, record_time, completion_time, trace_id, 
    span_id, create_time, update_time, create_operator, update_operator
  </sql>
  <sql id="Blob_Column_List">
    thread_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="top.mingempty.concurrent.record.model.TaskExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_thread_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="top.mingempty.concurrent.record.model.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_thread_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_thread_task_record
    where task_id = #{taskId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_thread_task_record
    where task_id = #{taskId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="top.mingempty.concurrent.record.model.TaskExample">
    delete from t_thread_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.mingempty.concurrent.record.model.TaskPo">
    insert into t_thread_task_record (task_id, pool_name, task_class, 
      task_status, record_time, completion_time, 
      trace_id, span_id, create_time, 
      update_time, create_operator, update_operator, 
      thread_data)
    values (#{taskId,jdbcType=VARCHAR}, #{poolName,jdbcType=VARCHAR}, #{taskClass,jdbcType=VARCHAR}, 
      #{taskStatus,jdbcType=CHAR}, #{recordTime,jdbcType=TIMESTAMP}, #{completionTime,jdbcType=TIMESTAMP}, 
      #{traceId,jdbcType=VARCHAR}, #{spanId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createOperator,jdbcType=VARCHAR}, #{updateOperator,jdbcType=VARCHAR}, 
      #{threadData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.mingempty.concurrent.record.model.TaskPo">
    insert into t_thread_task_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="poolName != null">
        pool_name,
      </if>
      <if test="taskClass != null">
        task_class,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="recordTime != null">
        record_time,
      </if>
      <if test="completionTime != null">
        completion_time,
      </if>
      <if test="traceId != null">
        trace_id,
      </if>
      <if test="spanId != null">
        span_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createOperator != null">
        create_operator,
      </if>
      <if test="updateOperator != null">
        update_operator,
      </if>
      <if test="threadData != null">
        thread_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="poolName != null">
        #{poolName,jdbcType=VARCHAR},
      </if>
      <if test="taskClass != null">
        #{taskClass,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=CHAR},
      </if>
      <if test="recordTime != null">
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completionTime != null">
        #{completionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="traceId != null">
        #{traceId,jdbcType=VARCHAR},
      </if>
      <if test="spanId != null">
        #{spanId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperator != null">
        #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateOperator != null">
        #{updateOperator,jdbcType=VARCHAR},
      </if>
      <if test="threadData != null">
        #{threadData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.mingempty.concurrent.record.model.TaskExample" resultType="java.lang.Long">
    select count(*) from t_thread_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_thread_task_record
    <set>
      <if test="row.taskId != null">
        task_id = #{row.taskId,jdbcType=VARCHAR},
      </if>
      <if test="row.poolName != null">
        pool_name = #{row.poolName,jdbcType=VARCHAR},
      </if>
      <if test="row.taskClass != null">
        task_class = #{row.taskClass,jdbcType=VARCHAR},
      </if>
      <if test="row.taskStatus != null">
        task_status = #{row.taskStatus,jdbcType=CHAR},
      </if>
      <if test="row.recordTime != null">
        record_time = #{row.recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.completionTime != null">
        completion_time = #{row.completionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.traceId != null">
        trace_id = #{row.traceId,jdbcType=VARCHAR},
      </if>
      <if test="row.spanId != null">
        span_id = #{row.spanId,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createOperator != null">
        create_operator = #{row.createOperator,jdbcType=VARCHAR},
      </if>
      <if test="row.updateOperator != null">
        update_operator = #{row.updateOperator,jdbcType=VARCHAR},
      </if>
      <if test="row.threadData != null">
        thread_data = #{row.threadData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_thread_task_record
    set task_id = #{row.taskId,jdbcType=VARCHAR},
      pool_name = #{row.poolName,jdbcType=VARCHAR},
      task_class = #{row.taskClass,jdbcType=VARCHAR},
      task_status = #{row.taskStatus,jdbcType=CHAR},
      record_time = #{row.recordTime,jdbcType=TIMESTAMP},
      completion_time = #{row.completionTime,jdbcType=TIMESTAMP},
      trace_id = #{row.traceId,jdbcType=VARCHAR},
      span_id = #{row.spanId,jdbcType=VARCHAR},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      create_operator = #{row.createOperator,jdbcType=VARCHAR},
      update_operator = #{row.updateOperator,jdbcType=VARCHAR},
      thread_data = #{row.threadData,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_thread_task_record
    set task_id = #{row.taskId,jdbcType=VARCHAR},
      pool_name = #{row.poolName,jdbcType=VARCHAR},
      task_class = #{row.taskClass,jdbcType=VARCHAR},
      task_status = #{row.taskStatus,jdbcType=CHAR},
      record_time = #{row.recordTime,jdbcType=TIMESTAMP},
      completion_time = #{row.completionTime,jdbcType=TIMESTAMP},
      trace_id = #{row.traceId,jdbcType=VARCHAR},
      span_id = #{row.spanId,jdbcType=VARCHAR},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      create_operator = #{row.createOperator,jdbcType=VARCHAR},
      update_operator = #{row.updateOperator,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.mingempty.concurrent.record.model.TaskPo">
    update t_thread_task_record
    <set>
      <if test="poolName != null">
        pool_name = #{poolName,jdbcType=VARCHAR},
      </if>
      <if test="taskClass != null">
        task_class = #{taskClass,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=CHAR},
      </if>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completionTime != null">
        completion_time = #{completionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="traceId != null">
        trace_id = #{traceId,jdbcType=VARCHAR},
      </if>
      <if test="spanId != null">
        span_id = #{spanId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperator != null">
        create_operator = #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateOperator != null">
        update_operator = #{updateOperator,jdbcType=VARCHAR},
      </if>
      <if test="threadData != null">
        thread_data = #{threadData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="top.mingempty.concurrent.record.model.TaskPo">
    update t_thread_task_record
    set pool_name = #{poolName,jdbcType=VARCHAR},
      task_class = #{taskClass,jdbcType=VARCHAR},
      task_status = #{taskStatus,jdbcType=CHAR},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      completion_time = #{completionTime,jdbcType=TIMESTAMP},
      trace_id = #{traceId,jdbcType=VARCHAR},
      span_id = #{spanId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_operator = #{createOperator,jdbcType=VARCHAR},
      update_operator = #{updateOperator,jdbcType=VARCHAR},
      thread_data = #{threadData,jdbcType=LONGVARCHAR}
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.mingempty.concurrent.record.model.TaskPo">
    update t_thread_task_record
    set pool_name = #{poolName,jdbcType=VARCHAR},
      task_class = #{taskClass,jdbcType=VARCHAR},
      task_status = #{taskStatus,jdbcType=CHAR},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      completion_time = #{completionTime,jdbcType=TIMESTAMP},
      trace_id = #{traceId,jdbcType=VARCHAR},
      span_id = #{spanId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_operator = #{createOperator,jdbcType=VARCHAR},
      update_operator = #{updateOperator,jdbcType=VARCHAR}
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>
  <delete id="batchDelete" parameterType="java.lang.String">
    delete from t_thread_task_record where task_id in (
    <foreach collection="taskIdS" index="index" item="taskId" separator=",">
      #{taskId}
    </foreach>
    )
  </delete>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into t_thread_task_record (task_id, 
      pool_name, task_class, task_status, 
      record_time, completion_time, 
      trace_id, span_id, create_time, 
      update_time, create_operator, 
      update_operator, thread_data
      )
    values <foreach collection="list" item="item" index="index" separator="," >
	  (#{item.taskId,jdbcType=VARCHAR}, 
      #{item.poolName,jdbcType=VARCHAR}, #{item.taskClass,jdbcType=VARCHAR}, #{item.taskStatus,jdbcType=CHAR}, 
      #{item.recordTime,jdbcType=TIMESTAMP}, #{item.completionTime,jdbcType=TIMESTAMP}, 
      #{item.traceId,jdbcType=VARCHAR}, #{item.spanId,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
      #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createOperator,jdbcType=VARCHAR}, 
      #{item.updateOperator,jdbcType=VARCHAR}, #{item.threadData,jdbcType=LONGVARCHAR}
      )
	  </foreach>
  </insert>
</mapper>